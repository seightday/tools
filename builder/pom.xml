<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.seightday</groupId>
	<artifactId>builder</artifactId>
	<version>1.0.0</version>
	<packaging>jar</packaging>

	<name>deamon</name>
	<description>deamon for nw</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.3.5.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>1.8</java.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>
		<dependency>
			<groupId>org.codehaus.groovy</groupId>
			<artifactId>groovy-all</artifactId>
		</dependency>
		
		
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
		</dependency>
		<dependency>
		    <groupId>commons-io</groupId>
		    <artifactId>commons-io</artifactId>
		    <version>2.5</version>
		</dependency>
		<dependency>
			<groupId>org.apache.ant</groupId>
			<artifactId>ant</artifactId>
			<version>1.9.4</version>
		</dependency>
	</dependencies>
	
<!-- 	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
 			<plugin>
				<groupId>org.codehaus.gmavenplus</groupId>
				<artifactId>gmavenplus-plugin</artifactId>
				<version>1.5</version>
				<executions>
					<execution>
						<goals>
							<goal>addSources</goal>
							<goal>addTestSources</goal>
							<goal>generateStubs</goal>
							<goal>compile</goal>
							<goal>testGenerateStubs</goal>
							<goal>testCompile</goal>
							<goal>removeStubs</goal>
							<goal>removeTestStubs</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build> -->
	<build>
		<testResources>
			<testResource>
				<!-- 使用开发配置运行单元测试 -->
				<directory>${basedir}\src\main\resources</directory>
			</testResource>
		</testResources>
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<!-- 2.8.0-01 and later require maven-compiler-plugin 3.1 or higher -->
				<version>3.1</version>
				<configuration>
					<compilerId>groovy-eclipse-compiler</compilerId>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.codehaus.groovy</groupId>
						<artifactId>groovy-eclipse-compiler</artifactId>
						<version>2.9.1-01</version>
					</dependency>
					<!-- for 2.8.0-01 and later you must have an explicit dependency on 
						groovy-eclipse-batch -->
					<dependency>
						<groupId>org.codehaus.groovy</groupId>
						<artifactId>groovy-eclipse-batch</artifactId>
						<version>2.3.7-01</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>appassembler-maven-plugin</artifactId>
				<configuration>
					<repositoryLayout>flat</repositoryLayout>
					<repositoryName>lib</repositoryName>
					<configurationSourceDirectory>src/main/resources</configurationSourceDirectory>
					<!-- Set the target configuration directory to be used in the bin scripts -->
					<configurationDirectory>.</configurationDirectory>
					<!-- Copy the contents from "/src/main/config" to the target configuration 
						directory in the assembled application -->
					<copyConfigurationDirectory>true</copyConfigurationDirectory>
					<!-- Include the target configuration directory in the beginning of 
						the classpath declaration in the bin scripts -->
					<includeConfigurationDirectoryInClasspath>true</includeConfigurationDirectoryInClasspath>
					<!-- set alternative assemble directory -->
					<assembleDirectory>target/builder</assembleDirectory>
					<!-- Extra JVM arguments that will be included in the bin scripts -->
					<!-- <extraJvmArguments>-Xms768m -Xmx768m -XX:PermSize=128m -XX:MaxPermSize=256m 
						-XX:NewSize=192m -XX:MaxNewSize=384m </extraJvmArguments> -->
					<!-- Generate bin scripts for windows and unix pr default -->
					<platforms>
						<platform>windows</platform>
						<!-- <platform>unix</platform> -->
					</platforms>
					<programs>
						<program>
							<mainClass>com.seightday.builder.BuilderApplication</mainClass>
							<name>startup</name>
						</program>
					</programs>
					<!-- prefix all bin files with "mycompany" -->
					<binPrefix>startup</binPrefix>
					<!-- <binFolder>.</binFolder> -->
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<phase>verify</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
<!-- 							<tasks>
								<replace file="target/builder/bin/startup.bat">
									<replacetoken>:endInit</replacetoken>
									<replacevalue><![CDATA[:endInit
set CLASSPATH="%BASEDIR%"\jre\lib\dt.jar;"%BASEDIR%"\jre\lib\tools.jar;%CLASSPATH%
set Path="%BASEDIR%"\jre\bin;c:\windows\system32]]></replacevalue>
								</replace>
								<replace file="target/builder/bin/startup.bat">
									<replacetoken>if %ERRORLEVEL% NEQ 0 goto error</replacetoken>
									<replacevalue><![CDATA[exit
if %ERRORLEVEL% NEQ 0 goto error]]></replacevalue>
								</replace>由于添加更新功能，执行完成即退出cmd，而不是pause手动点击退出，

								去掉版本号
								<replace file="target/builder/bin/startup.bat">
									<replacetoken>${project.artifactId}-${project.version}</replacetoken>
									<replacevalue>${project.artifactId}</replacevalue>
								</replace>
								<move
									file="target/builder/lib/${project.artifactId}-${project.version}.jar"
									tofile="target/builder/lib/${project.artifactId}.jar" />

								<copy todir="target/builder/jre">
									<fileset dir="C:/Program Files/Java/jre1.8.0_91" />
								</copy>

							</tasks> -->
						</configuration>
					</execution>
				</executions>

			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-compiler-plugin
										</artifactId>
										<versionRange>[3.1,)</versionRange>
										<goals>
											<goal>testCompile</goal>
											<goal>compile</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

</project>
